{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/Escritorio/github/app-011-meli-assignment/frontend/src/pages/SearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Breadcrumbs from '../components/Breadcrumbs';\nimport List from '../components/List';\nimport SearchBar from '../components/SearchBar';\nimport dummyQuery from '../data/dummyQuery';\nexport default function Results() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [search, setSearch] = useState({});\n  useEffect(() => {\n    // axios.get(`127.0.0.1:4000/api/items?q=${search.id}`)\n    const response = axios.get(\"192.168.1.8:4000/api/items/taichi\") // axios.get(`https://api.mercadolibre.com/sites/MLA/search?q=${id}`)\n    .then(response => response.data.results).catch(error => console.error(error));\n    /* setSearch(response) */\n\n    console.log(\"id\", id);\n    console.log(\"search\", search);\n    console.log(\"response\", response);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      categoryID: \"MLA1271\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Results, \"dkZewVnFhn9a9gUjojDs/M8ujXQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/home/ubuntu/Escritorio/github/app-011-meli-assignment/frontend/src/pages/SearchResults.jsx"],"names":["axios","React","useEffect","useState","useParams","Breadcrumbs","List","SearchBar","dummyQuery","Results","id","search","setSearch","response","get","then","data","results","catch","error","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMW,QAAQ,GAAGb,KAAK,CAACc,GAAN,CAAU,mCAAV,EACjB;AADiB,KAEZC,IAFY,CAEPF,QAAQ,IAAIA,QAAQ,CAACG,IAAT,CAAcC,OAFnB,EAGZC,KAHY,CAGNC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAHH,CAAjB;AAIA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBX,EAAlB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,MAAtB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,QAAxB;AAEH,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,WAAD;AAAa,MAAA,UAAU,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF;AAAb;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAzBuBF,O;UACLL,S;;;KADKK,O","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport Breadcrumbs from '../components/Breadcrumbs';\nimport List from '../components/List';\nimport SearchBar from '../components/SearchBar'\nimport dummyQuery from '../data/dummyQuery';\n\nexport default function Results() {\n    const { id } = useParams();\n    const [search, setSearch] = useState({})\n    \n    useEffect(() => {\n        // axios.get(`127.0.0.1:4000/api/items?q=${search.id}`)\n        const response = axios.get(\"192.168.1.8:4000/api/items/taichi\")\n        // axios.get(`https://api.mercadolibre.com/sites/MLA/search?q=${id}`)\n            .then(response => response.data.results)\n            .catch(error => console.error(error))\n        /* setSearch(response) */\n        console.log(\"id\", id);\n        console.log(\"search\", search);\n        console.log(\"response\", response);\n\n    }, [])\n\n    return (\n        <div>\n            <SearchBar />\n            {/* {search.author.name} */}\n            <Breadcrumbs categoryID=\"MLA1271\"/>\n            <List items={search} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}